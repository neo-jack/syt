// 导入 request 对象
// 1. 代码含义: 这行代码的意思是，从当前文件夹（`./` 表示当前文件夹）下的 `request.ts` 文件中，
//             把那个文件里用 `export default` 导出的东西拿过来，并给它起个名字叫 `request`。
//             在 `request.ts` 文件中，导出的正是一个我们精心配置过的、用来发网络请求的工具。
// 2. 代码目的: 我们把这个强大的 `request` 工具导入到 `index.ts` 这个文件里，是为了能统一地管理和导出它。
//             `index.ts` 文件在前端工程中通常扮演一个“目录”或者“枢纽”的角色。
// 3. 实现功能: 这行代码执行后，`request` 这个变量就代表了那个配置好的网络请求工具，可以在当前文件中使用了。
import request from "./request";

// 导出 request 对象
// 1. 代码含义: 这行代码把我们刚刚导入的 `request` 变量，再原封不动地暴露（导出）出去。
// 2. 代码目的: 这个 `index.ts` 文件的主要作用就是做一个“中间人”。项目里其他任何地方如果需要发网络请求，
//             它们就不需要去关心 `request` 工具具体是在 `utils/http/request.ts` 这个深层文件里定义的，
//             只需要统一从 `utils/http` 这个“枢纽站”导入就行了。这让我们的代码引用路径更短、更整洁。
// 3. 实现功能: 经过这行代码，项目中的其他文件就可以通过 `import { request } from '@/utils/http'` 这样的方式，
//             非常方便地获取到这个网络请求工具，然后用它来和服务器进行数据交互（比如获取文章列表、提交用户信息等）。
export { request };
