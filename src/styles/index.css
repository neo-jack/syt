/*
  这个 #root 是一个 ID 选择器。
  在 HTML 中，它会选择 id="root" 的那个元素。
  在咱们这个 React 项目里，通常在 public/index.html 文件里会有一个 <div id="root"></div>，
  我们整个应用的所有内容，最后都会被渲染到这个 div 里面。
  所以，给 #root 设置样式，就等于在给我们整个应用设置一个最外层的样式。
*/
#root {
  /*
    设置 #root 元素的宽度。
    width: 100%; 的意思是让这个元素的宽度占满它父级元素的整个宽度。
    在这里，它的父级通常就是浏览器窗口，所以 #root 会和浏览器窗口一样宽。
  */
  width: 100%;
  /*
    设置 #root 元素的最小宽度。
    min-width: 1200px; 的意思是，不管浏览器窗口怎么缩小，
    这个元素的宽度最小也得是 1200 像素。
    如果窗口变得比 1200 像素还窄，那就会出现一个横向的滚动条来查看所有内容。
    这样做可以保证在较小的电脑屏幕上，页面布局不会乱掉。
  */
  min-width: 1200px;
  /*
    设置 #root 元素的高度。
    height: 100%; 的意思是让这个元素的高度占满它父级元素的整个高度。
    这样一来，我们整个应用就能在垂直方向上占满整个屏幕。
  */
  height: 100%;
}

/*
  公共样式 (Common Styles)
  这里定义的样式是一些“工具类”，就像小工具一样，可以在项目里任何需要的地方使用。
  比如需要一点间距的时候，就不用特地去写新的 CSS，直接用这里定义好的类名就行。
*/

/*
  这是一个叫 "ml" 的 class (类) 选择器。
  "ml" 是 "margin-left" (左外边距) 的缩写，是一种简便的命名方式。
  任何 HTML 元素，只要给它加上 class="ml"，就会应用这个样式。
  例如: <button class="ml">按钮</button>
*/
.ml {
  /*
    margin-left: 10px; 的意思是给元素的左边添加 10 像素的外边距（空白）。
    这会让元素和它左边的其他元素之间产生 10 像素的距离。
  */
  margin-left: 10px;
}

/*
  这是一个叫 "mt" 的 class (类) 选择器。
  "mt" 是 "margin-top" (上外边距) 的缩写。
  任何 HTML 元素，只要给它加上 class="mt"，就会应用这个样式。
  例如: <div class="mt">一些内容</div>
*/
.mt {
  /*
    margin-top: 20px; 的意思是给元素的顶部添加 20 像素的外边距（空白）。
    这会让元素和它上方的其他元素之间产生 20 像素的距离。
  */
  margin-top: 20px;
}
