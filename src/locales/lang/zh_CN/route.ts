// 这是一个 TypeScript 文件。它的主要作用是定义项目中各个“路由”（您可以理解为一个个页面或功能模块）的中文名称。
// 在开发中，我们通常用英文单词作为代码中的唯一标识（比如 'dashboard'），
// 然后在这里把这个英文标识和它在界面上应该显示的中文名称（比如 '首页'）对应起来。
// 这样做的好处是，代码和显示的文字分离开，管理起来更方便，以后如果需要添加其他语言（比如英文），也更容易扩展。

// 这里我们使用 `const` 关键字来声明一个常量，名字叫做 `route`。
// “常量”的意思是，`route` 这个变量一旦被赋值了，就不能再改变它的指向了。
// `{}` 这对花括号表示我们正在创建一个“对象”，对象可以用来存放很多组“键值对”信息。
const route = {
  // 这一行是一个“键值对”。`dashboard` 是“键”，"首页" 是“值”。
  // 它的作用是告诉程序，凡是用到 `dashboard` 这个路由标识的地方，界面上都应该显示“首页”这两个字。
  dashboard: "首页",
  // `hospital` 是“医院管理”这个一级菜单的路由标识。
  hospital: "医院管理",
  // `hospitalSet` 是“医院管理”菜单下的“医院设置”子页面的路由标识。
  hospitalSet: "医院设置",
  // `hospitalList` 是“医院管理”菜单下的“医院列表”子页面的路由标识。
  hospitalList: "医院列表",
  // `data` 是“数据管理”这个一级菜单的路由标识。
  data: "数据管理",
  // `dict` 是“数据管理”菜单下的“数据字典”子页面的路由标识。
  dict: "数据字典",
  // `member` 是“会员管理”这个一级菜单的路由标识。
  member: "会员管理",
  // `memberList` 是“会员管理”菜单下的“会员列表”子页面的路由标识。
  memberList: "会员列表",
  // `certificationList` 是“会员管理”菜单下的“认证审批列表”子页面的路由标识。
  certificationList: "认证审批列表",
  // `order` 是“订单管理”这个一级菜单的路由标识。
  order: "订单管理",
  // `orderList` 是“订单管理”菜单下的“订单列表”子页面的路由标识。
  orderList: "订单列表",
  // `statistics` 是“统计管理”这个一级菜单的路由标识。
  statistics: "统计管理",
  // `statisticsList` 是“统计管理”菜单下的“统计列表”子页面的路由标识。
  statisticsList: "统计列表",
}; // 这个右花括号 `}` 标志着 `route` 这个对象的定义结束了。

// 这一行代码使用了 ES6 模块系统的 `export default` 语法。
// 它的作用是把我们刚刚定义好的 `route` 对象“导出”，让项目中的其他文件可以“导入”并使用它。
// `default` 关键字表示这是这个文件的默认导出项，其他文件导入时可以给它取任意名字，但通常我们还叫它 `route`。
export default route;
